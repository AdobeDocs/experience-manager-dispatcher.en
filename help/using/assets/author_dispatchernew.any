#
# Configuration for an author instance
#

# name of the dispatcher
/name "internet-server"

# each farm configures a set off (loadbalanced) renders
/farms
  {
  # first farm entry
  /author
    {  
    # Request headers that should be forwarded to the remote server.
    /clientheaders
      {
      # Forward all request headers that are end-to-end. If you want
      # to forward a specific set of headers, you'll have to list
      # them here.
      "*"
      }
    /virtualhosts
      {
      # entries will be compared against the 'host' request header.
      # example: www.company.com
      # example: intranet.*
      "*"
      }
    # the load will be balanced among theese render instances
    /renders
      {
      /rend01
        {
        # hostname or IP of the render
        /hostname "localhost"
        # port of the render
        /port "4502"
        # Connect timeout in milliseconds, 0 to wait indefinitely
        # /timeout "0"
        }
      }
    # only handle the requests in the following acl. default is 'none'
    # the glob pattern is matched against the first request line
    /filter
      {
      /0000
        {
        /glob "*"
        /type "allow"
        }
      # Deny external access to system console
      /0001
        {
        /glob "* /system/*"
        /type "deny"
        }
      # Deny external access to CRX web application
      /0002
        {
        /glob "* /crx*"
        /type "deny"
        }
      # Deny external access to servlet engine console
      /0003
        {
        /glob "* /admin/*"
        /type "deny"
        }
      # allow  access to logout 
      /0004
        {
        /glob "* /system/sling/logout*"
        /type "allow"
        }
      }  
  
    # deny propagation of replication posts
    /propagateSyndPost "0"
  
    # the cache is used to store requests from the renders for faster delivery
    # for a second time.
    /cache
      {
      # The docroot must be equal to the document root of the webserver. The
      # dispatcher will store files relative to this directory and subsequent
      # requests may be "declined" by the dispatcher, allowing the webserver
      # to deliver them just like static files.      

      /docroot "/opt/communique/dispatcher/cache"
  
      # Sets the level upto which files named ".stat" will be created in the 
      # document root of the webserver. When an activation request for some 
      # page is received, only files within the same subtree are affected 
      # by the invalidation.
      /statfileslevel  "0"
  
      # Flag indicating whether to cache responses to requests that contain
      # authorization information.
      /allowAuthorized "0"

      # Flag indicating whether the dispatcher should serve stale content if
      # no remote server is available.
      #/serveStaleOnError "0"  

      # the rules define, which pages should be cached. please note that
      # - only GET requests are cached
      # - only requests with an extension are cached
      # - only requests without query parameters ( ? ) are cached
      # - only unauthorized pages are cached unless allowUnauthorized is set to 1
      /rules
        {
        /0000
          {
          /glob "*"
          /type "deny"
          }
        /0001
          {
          /glob "/libs/*"
          /type "allow"
          }
        /0002
          {
          /glob "/libs/*.html"
          /type "deny"
          }
        /0003
          {
          /glob "/apps/*"
          /type "allow"
          }
        /0004
          {
          /glob "/apps/*.html"
          /type "deny"
          }
        /0005
          {
          # This page contains a "Welcome, User XXX" message
          /glob "/libs/cq/core/content/welcome.*"
          /type "deny"
          }
        }
  
      # the invalidate section defines those pages which are 'invalidated' after
      # any activation. please note that, the activated page itself and all 
      # related documents are flushed on an modification. for example: if the 
      # page /foo/bar is activated, all /foo/bar.* files are removed from the
      # cache.
      /invalidate
        {
        /0000
          {
          /glob "*"
          /type "deny"
          }
        /0001
          {
          /glob "*.html"
          /type "allow"
          }
        }
      # The allowedClients section restricts the client IP addresses that are
      # allowed to issue activation requests.
      /allowedClients
        {
        # Uncomment the following to restrict activation requests to originate
        # from "localhost" only.
        #
        #/0000
        #  {
        #  /glob "*"
        #  /type "deny"
        #  }
        #/0001
        #  {
        #  /glob "127.0.0.1"
        #  /type "allow"
        #  }
        }
        
      # The ignoreUrlParams section contains query string parameter names that
      # should be ignored when determining whether some request's output can be
      # cached or delivered from cache.
      #
      # In this example configuration, the "q" parameter will be ignored. 
      #/ignoreUrlParams
      #  {
      #  /0001 { /glob "*" /type "deny" }
      #  /0002 { /glob "q" /type "allow" }
      #  }
      
      }
    # the statistics define, who the load should be balanced among the renders
    # according to the media-type. 
    /statistics
      {
      /categories
        {
        /html
          {
          /glob "*.html"
          }
        /others
          {
          /glob "*"
          }
        }
      }
    }
  }
  
